function Shery(){var e=null,t=[];let a=(e,t,a)=>e*(1-a)+t*a;function o(e,t){let a=new THREE.PlaneGeometry(e.geometry.parameters.width,e.geometry.parameters.height,t,t);e.geometry.dispose(),e.geometry=a}function n(){let e="#controlKit .panel .group-list .group .sub-group-list .sub-group .wrap .wrap",t="#controlKit .panel .button, #controlKit .picker .button";document.querySelector(e)&&document.querySelectorAll(e).forEach(e=>e.style.width="30%"),document.querySelector(t)&&(document.querySelector(t).parentElement.style.float="none",document.querySelector(t).parentElement.style.width="100% "),document.querySelector(e+".color")&&(document.querySelector(e+".color").parentElement.style.width="60%")}function r(e,a,o,n,{opts:r,effect:l=0,aspect:i=1,size:s=.01744,geoVertex:u=1,fov:d=1,dposition:c=1}={}){let v=0,$="#controlKit .options",m=new THREE.Vector2,p=new THREE.Scene,f=new THREE.PerspectiveCamera(d,i,.1,2);f.position.z=1,Object.assign(n,{time:{value:0},uTexture:{value:new THREE.TextureLoader().load(e.getAttribute("src"))},mouse:{value:m},uIntercept:{value:0},onMouse:{value:0}});let g=new THREE.WebGLRenderer({antialias:!0,alpha:!0});g.setSize(e.width,e.height),g.setPixelRatio(Math.min(window.devicePixelRatio,2)),e.style.visibility="hidden",e.parentElement.appendChild(g.domElement);let _="vec3 mod289(vec3 x){return x-floor(x*(1./289.))*289.;}vec4 mod289(vec4 x){return x-floor(x*(1./289.))*289.;}vec4 permute(vec4 x){return mod289(((x*34.)+1.)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1./6.,1./3.);const vec4 D=vec4(0.,.5,1.,2.);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.,i1.z,i2.z,1.))+i.y+vec4(0.,i1.y,i2.y,1.))+i.x+vec4(0.,i1.x,i2.x,1.));float n_=.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.+1.;vec4 s1=floor(b1)*2.+1.;vec4 sh=-step(h,vec4(0.));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);m=m*m;return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}",x=new THREE.Mesh(new THREE.PlaneGeometry(s,s,u,u),new THREE.ShaderMaterial({vertexShader:a.replace("₹snoise",_),fragmentShader:o.replace("₹snoise",_),uniforms:n}));p.add(x);var u={value:32,range:[1,64]},y=null,b=null;let h=e=>{e.color&&(e.color.value=new THREE.Color(e.color.value)),Object.assign(n,e)};r.preset&&fetch(r.preset).then(e=>e.json()).then(e=>h(e)),r.config&&h(r.config),n.uFrequencyZ&&(f.fov=1+n.uFrequencyZ.value/400,f.updateProjectionMatrix()),r.debug&&!t[l]&&(t[2]=!0,b=(y=new ControlKit({loadAndSave:!0})).addPanel({label:"Debug Panel",fixed:!1,position:[c,0],width:280}).addButton("Save To Clipboard",()=>{let{time:e,resolution:t,uTexture:a,mouse:o,uIntercept:r,...l}=n;navigator.clipboard.writeText(JSON.stringify(l))})),g.domElement.addEventListener("mousemove",t=>{m.x=t.offsetX/e.width*2-1,m.y=-(t.offsetY/e.height*2-1)}),g.domElement.addEventListener("mouseleave",t=>{v=0,m.x=t.offsetX/e.width*2-1,m.y=-(t.offsetY/e.height*2-1)}),g.domElement.addEventListener("mouseenter",t=>{v=1,m.x=t.offsetX/e.width*2-1,m.y=-(t.offsetY/e.height*2-1)}),window.addEventListener("resize",t=>{g.setSize(e.width,e.height),g.setPixelRatio(Math.min(window.devicePixelRatio,2))});let S=new THREE.Clock;function q(){(0==g.domElement.width||0==g.domElement.height)&&g.setSize(e.width,e.height),document.querySelector($)&&0>parseInt(document.querySelector($).style.top)&&(document.querySelector($).style.top="0px"),Object.assign(n,{time:{value:S.getElapsedTime()},mouse:{value:m},uIntercept:{value:THREE.Math.lerp(n.uIntercept.value,1===v?1:0,.07)}}),requestAnimationFrame(q),g.render(p,f)}return{debugObj:{Mode:["Off","Reflact/Glow","Exclusion","Diffrance","Darken","ColorBurn","ColorDoge","SoftLight","Overlay","Phonix","Add","Multiply","Screen","Negitive","Divide","Substract","Neon","Natural","Mod","NeonNegative","Dark","Avarage"],"Mode Active":"Soft Light",Trigo:["Sin","Cos","Tan","Atan"],"Trig A":"Cos",Trigo:["Sin","Cos","Tan","Atan"],"Trig A":"Cos","Trig N":"Sin",Mouse:["Off","Mode 1"," Mode 2"," Mode 3"],onMouse:["Always Active","Active On Hover","Deactive On Hover"],Active:"Always Active","Mouse Active":"Off",Color:"#54A8FF",speed:{precise:1,normal:1,range:[-500,500],rangep:[-10,10]},frequency:{precise:1,normal:50,range:[-800,800],rangep:[-50,50]},pixelStrength:{precise:1,normal:3,range:[-20,100],rangep:[-20,20]},strength:{precise:1,normal:.2,range:[-40,40],rangep:[-5,5]},s:.6,range:[.1,1],f:.6,rangef:[1,10]},controlKit:y,panel:b,geoVertex:u,animate:q,plane:x,uniforms:x.material.uniforms}}return{mouseFollower:function(t={}){(e=document.createElement("div")).classList.add("mousefollower");var a=0;window.addEventListener("mousemove",function(e){t.skew&&(diff=gsap.utils.clamp(15,35,e.clientX-a),a=e.clientX,gsap.to(".mousefollower",{width:diff+"px",ease:t.ease||Expo.easeOut,duration:t.duration||1})),gsap.to(".mousefollower",{opacity:1,top:e.clientY,left:e.clientX,duration:t.duration||1,ease:t.ease||Expo.easeOut})}),document.addEventListener("mouseleave",function(){gsap.to(".mousefollower",{opacity:0,duration:t.duration||1,ease:t.ease||Expo.easeOut})}),document.body.appendChild(e)},imageMasker:function(t="img",a={}){document.querySelectorAll(t).forEach(function(t){var o=t.parentNode,n=document.createElement("div");if(a.mouseFollower){var r=document.createElement("div");r.style.width=gsap.utils.clamp(50,70,.3*t.getBoundingClientRect().width)+"px",r.style.height=gsap.utils.clamp(50,70,.3*t.getBoundingClientRect().width)+"px",r.textContent=a.text||"View More",r.classList.add("circle"),n.addEventListener("mouseenter",function(){gsap.to(r,{opacity:1,ease:Expo.easeOut,duration:1})}),n.addEventListener("mousemove",function(e){n.appendChild(r),gsap.to(r,{top:e.clientY-n.getBoundingClientRect().y,left:e.clientX-n.getBoundingClientRect().x,ease:Expo.easeOut,duration:2})}),n.addEventListener("mouseleave",function(){gsap.to(r,{opacity:0,ease:Expo.easeOut,duration:.8})})}n.classList.add("mask"),o.replaceChild(n,t),n.appendChild(t),n.addEventListener("mouseenter",function(){gsap.to(e,{opacity:0,ease:Power1})}),n.addEventListener("mousemove",function(e){gsap.to(t,{scale:a.scale||1.2,ease:a.ease||Expo.easeOut,duration:a.duration||1})}),n.addEventListener("mouseleave",function(){gsap.to(e,{opacity:1,ease:Power1}),gsap.to(this.childNodes[0],{scale:1,ease:a.ease||Expo.easeOut,duration:a.duration||1})})})},makeMagnet:function(e,t={}){document.querySelectorAll(e).forEach(function(e){e.addEventListener("mousemove",function(o){var n=e.getBoundingClientRect(),r=gsap.utils.mapRange(0,n.width,0,1,o.clientX-n.left),l=gsap.utils.mapRange(0,n.height,0,1,o.clientY-n.top);gsap.to(e,{x:a(-50,50,r),y:a(-50,50,l),duration:t.duration||1,ease:t.ease||Expo.easeOut})}),e.addEventListener("mouseleave",function(a){gsap.to(e,{x:0,y:0,duration:t.duration||1,ease:t.ease||Expo.easeOut})})})},textAnimate:function(e,t={}){var a=document.querySelectorAll(e);switch(a.forEach(function(e){e.classList.add("sheryelem");var t="";e.textContent.split("").forEach(function(e){t+=`<span>${e}</span>`}),e.innerHTML=t}),t.style||1){case 1:a.forEach(function(e){gsap.from(e.childNodes,{scrollTrigger:{trigger:e,start:"top 80%"},y:t.y||10,stagger:t.delay||.1,opacity:0,duration:t.duration||2,ease:t.ease||Expo.easeOut})});break;case 2:a.forEach(function(e,a){for(var o=e.childNodes.length-1,a=0;a<e.childNodes.length/2;a++)e.childNodes[a].dataset.delay=a;for(var a=Math.floor(e.childNodes.length/2);a<e.childNodes.length;a++)e.childNodes[a].dataset.delay=o-a;e.childNodes.forEach(function(e){gsap.from(e,{y:20,delay:e.dataset.delay*(t.multiplier||.1),opacity:0,ease:t.ease||Expo.easeOut})})});break;default:console.warn("SheryJS : no such style available for text, mentioned in textanimate()")}},imageEffect:function(e="img",t={}){document.querySelectorAll(e).forEach(function(e){var a=e.parentNode,l=document.createElement("div"),i=document.createElement("div");switch(l.classList.add(e.classList[0]),l.id=e.id,l.style.display="inline-block",i.style.position="relative",e.style.position="absolute",a.replaceChild(i,e),i.appendChild(e),a.replaceChild(l,i),l.appendChild(i),t.style||1){case 1:{let s=`uniform sampler2D uTexture;uniform float uIntercept,time,a,b,onMouse;uniform vec2 mouse;varying vec2 vuv;₹snoisevoid main(){vec2 uv=vuv;vec3 v = vec3(vuv.x*1.0+time*a/10.0,vuv.y,time);vec2 surface=vec2(snoise(v)*.08,snoise(v)*.01);surface = onMouse == 0. ? surface : onMouse == 1. ? mix( vec2(0.3) , surface ,uIntercept) : mix(surface , vec2(0.) ,uIntercept);uv +=refract(vec2(.0,.0),surface,b);gl_FragColor=texture2D(uTexture,uv);}`;var{debugObj:u,panel:d,uniforms:c,animate:v}=r(e,"varying vec2 vuv;void main(){gl_Position=projectionMatrix*viewMatrix*modelMatrix*vec4(position,1.);vuv = uv;}",s,{a:{value:2,range:[0,30]},b:{value:.7,range:[-1,1]}},{effect:1,opts:t});d&&(d.addSelect(u,"onMouse",{target:"Active",label:"Effect Mode",onChange:e=>c.onMouse.value=e}).addSlider(c.a,"value","range",{label:"Speed",step:.001}).addSlider(c.b,"value","range",{label:"Wobbleness",step:.001}),n()),v()}break;case 2:{let $=`uniform vec2 resolution,mouse;uniform float uIntercept,time,frequency, angle, speed, waveFactor,contrast,pixelStrength, quality, brightness, colorExposer, strength, exposer;uniform int onMouse, mousemove, mode, modeA, modeN;uniform bool distortion;uniform vec3 color;varying vec2 vuv;uniform sampler2D uTexture;float mina(vec4 a){return min(min(a.r, a.g),a.b);}float maxa(vec4 a){return max(max(a.r, a.g),a.b);}vec4 minn(vec4 a , vec4 b){return vec4(min(a.r,b.r),min(a.g,b.g),min(a.b,b.b),1.0);}vec4 maxx(vec4 a , vec4 b){return vec4(max(a.r,b.r),max(a.g,b.g),max(a.b,b.b),1.0);}mat2 rotate2D(float r) {return mat2(cos(r), sin(r), -sin(r), cos(r));}void main() {float brightness = clamp(brightness, -1.0,25.0);float frequency=clamp(frequency,-999.0,999.0);float contrast=clamp(contrast,-50.,50.0);float pixelStrength=clamp(pixelStrength,-20.0,999.0); float strength=clamp(strength,-100.,100.);float colorExposer=clamp(colorExposer,-5.,5.);vec2 uv = .5*(gl_FragCoord.xy-.5*resolution.xy)/resolution.y;uv=mousemove!=0 ? mix(uv,.5*(gl_FragCoord.xy-.5*resolution.xy)/resolution.y+mouse.xy/300.,uIntercept):uv;vec3 col = vec3(0);vec2 n,q = vec2(0);vec2 p = (uv + brightness/10.0);float d = dot(p, p);float a = -(contrast/100.0);mat2 angle = rotate2D(angle);for(float i = 1.; i <= 10.0; i++) {if(i>quality) break;p,n *= angle;if(mousemove==0) q = p * frequency + time * speed + sin(time) * .0018 * i - pixelStrength * n ;if(mousemove==1) q = p * frequency + time * speed + sin(time) * .0018 * i + mouse - pixelStrength * n ;if(mousemove==2) q = p * frequency + time * speed + sin(time) * .0018 * i - pixelStrength + mouse * n ;if(mousemove==3) q = p * frequency + time * speed + sin(time) * .0018 * i + mouse - pixelStrength + mouse * n ;if(modeA==0) a += dot(sin(q) / frequency, vec2(strength));else if(modeA==1) a += dot(cos(q) / frequency, vec2(strength));else if(modeA==2) a += dot(tan(q) / frequency , vec2(strength));else if(modeA==3) a += dot(atan(q) / frequency , vec2(strength));if(modeN==0) n -= sin(q);else if(modeN==1) n -= cos(q);else if(modeN==2) n -= tan(q);else if(modeN==3) n -= atan(q);n =mousemove !=0 ? mix(n+mouse,n,uIntercept):n;frequency *= waveFactor;}col = (color*4.5) * (a + colorExposer) +exposer* a + a + d;vec4 base = distortion? texture2D(uTexture,vuv+a+contrast/100.0):texture2D(uTexture,vuv);base = onMouse == 0 ? base : onMouse == 1 ? mix( texture2D(uTexture,vuv),base,uIntercept) : mix( base,texture2D(uTexture,vuv),uIntercept);vec4 blend = vec4(col, 1.0);vec4 final = mix( base,gl_FragColor,uIntercept);if (mode == -10) final = base;else if (mode == -1) final =	minn(base,blend)-maxx(base,blend)+vec4(1.0);else if (mode == -9) final =	(maxa(blend)==1.0)?blend:minn(base*base/(1.0-blend),vec4(1.0));else if (mode == -8) final =	base+blend-2.0*base*blend;else if (mode == -7) final =	abs(base-blend);else if (mode == -6) final =	minn(base,blend);else if (mode == -5) final =	(mina(blend)==0.0)?blend:maxx((1.0-((1.0-base)/blend)),vec4(0.0));else if (mode == -4) final =	maxa(base)==1.0? blend : minn(base/(1.0-blend),vec4(1.0));else if (mode == -3) final = (1.0-2.0*blend)*base*base+2.0*base*blend;else if (mode == -2) final = maxa(base) < 0.5? 2.0 * base * blend : 1.0 - 2.0* (1.0 - base)*(1.0 - blend);else if(mode==0) final = base + blend ;else if(mode==1) final = base * blend ;else if(mode==2) final = 1.0 - (1.0 - base)*(1.0 - blend);else if(mode==3) final = blend - base ;else if(mode==4) final = base / blend ;else if(mode==5) final =	maxx(base+blend-1.0,vec4(0.0));else if(mode==6) final = (base + blend / base)-.55;else if(mode==7) final = base + blend *base;else if(mode==8) final = mod(base , blend);else if(mode==9) final = 1.0-(base + blend / base)+.5;else if(mode==10) final = blend - base * blend;else if(mode==11) final = (base +blend/2.0);final = mix(final * brightness,mix(maxx(final,vec4(1.0)), final, contrast), 0.5);final = onMouse == 0 ? final : onMouse == 1 ? mix( base , final ,uIntercept) : mix( final , base ,uIntercept) ;gl_FragColor=final;}`;var{debugObj:u,controlKit:m,panel:d,uniforms:c,animate:v}=r(e,"varying vec2 vuv;void main(){gl_Position=projectionMatrix*viewMatrix*modelMatrix*vec4(position,1.);vuv = uv;}",$,{resolution:{value:new THREE.Vector2(e.width,e.height)},distortion:{value:!0},mode:{value:-3},mousemove:{value:0},modeA:{value:1},modeN:{value:0},speed:{value:1,range:[-500,500],rangep:[-10,10]},frequency:{value:50,range:[-800,800],rangep:[-50,50]},angle:{value:.5,range:[0,Math.PI]},waveFactor:{value:1.4,range:[-3,3]},color:{value:new THREE.Color(.33,.66,1)},pixelStrength:{value:3,range:[-20,100],rangep:[-20,20]},quality:{value:5,range:[0,10]},contrast:{value:1,range:[-25,25]},brightness:{value:1,range:[-1,25]},colorExposer:{value:.182,range:[-5,5]},strength:{value:.2,range:[-40,40],rangep:[-5,5]},exposer:{value:8,range:[-100,100]}},{effect:2,opts:t,dposition:350});d&&(d.addCheckbox(c.distortion,"value",{label:"Distortion Effect"}).addSelect(u,"onMouse",{target:"Active",label:"Effect Mode",onChange:e=>c.onMouse.value=e}).addSelect(u,"Mode",{target:"Mode Active",label:"Blend/Overlay Mode",onChange:e=>c.mode.value=e-10}).addSelect(u,"Mouse",{target:"Mouse Active",label:"Mousemove Effect",onChange:e=>c.mousemove.value=e}).addSelect(u,"Trigo",{target:"Trig A",label:"Effect StyleA",onChange:e=>c.modeA.value=e}).addSelect(u,"Trigo",{target:"Trig N",label:"Effect StyleN",onChange:e=>c.modeN.value=e}).addSelect(u,"Trigo",{target:"Trig N",label:"Effect StyleN",onChange:e=>c.modeN.value=e}).addColor(u,"Color",{colorMode:"hex",onChange:e=>c.color.value.set(e)}),m.addPanel({label:"Debug Panel",width:350,fixed:!1,position:[0,0]}).addSlider(u.speed,"normal","range",{label:"Speed",step:1e-5,onChange:()=>c.speed.value=u.speed.normal}).addSlider(u.speed,"precise","rangep",{label:"Speed Precise",step:1e-5,onChange:()=>c.speed.value=u.speed.precise}).addSlider(u.frequency,"normal","range",{label:"Frequency",step:1e-5,onChange:()=>c.frequency.value=u.frequency.normal}).addSlider(u.frequency,"precise","rangep",{label:"Frequency Precise",step:1e-5,onChange:()=>c.frequency.value=u.frequency.precise}).addSlider(c.angle,"value","range",{label:"Angle",step:1e-5}).addSlider(c.waveFactor,"value","range",{label:"Wave Factor",step:1e-5}).addSlider(u.pixelStrength,"normal","range",{label:"Pixel Strength",step:1e-5,onChange:()=>c.pixelStrength.value=u.pixelStrength.normal}).addSlider(u.pixelStrength,"precise","rangep",{label:"Precise Pixel",step:1e-5,onChange:()=>c.pixelStrength.value=u.pixelStrength.normal}).addSlider(c.quality,"value","range",{label:"Quality",step:1e-5}).addSlider(c.contrast,"value","range",{label:"Contrast",step:1e-5}).addSlider(c.brightness,"value","range",{label:"Brightness",step:1e-5}).addSlider(c.colorExposer,"value","range",{label:"Color Exposer",step:1e-5}).addSlider(u.strength,"normal","range",{label:"Strength",step:1e-5,onChange:e=>c.strength.value=u.strength.normal}).addSlider(u.strength,"precise","rangep",{label:"Strength Precise",step:1e-5,onChange:e=>c.strength.value=u.strength.precise}).addSlider(c.exposer,"value","range",{label:"Exposer",step:1e-5}),n()),v()}break; case 3:{let p=`uniform float uFrequencyX,uFrequencyY,uFrequencyZ,time,uIntercept;uniform int onMouse;varying vec2 vUv;void main(){vec3 uFrequency=vec3(uFrequencyX/.01744,uFrequencyY/.01744,uFrequencyZ);vec4 modelPosition = modelMatrix * vec4(position, 1.0);float elevation = sin(modelPosition.x * uFrequency.x - time) *uFrequency.z/1000.0;elevation += sin(modelPosition.y * uFrequency.y - time) *uFrequency.z/1000.0;modelPosition.z += elevation;modelPosition = onMouse == 0 ? modelPosition : onMouse == 1 ? mix( modelMatrix * vec4(position, 1.0) , modelPosition ,uIntercept) : mix( modelPosition , modelMatrix * vec4(position, 1.0) ,uIntercept) ;gl_Position = projectionMatrix * viewMatrix * modelPosition;vUv = uv;}`;var{debugObj:u,panel:d,geoVertex:f,plane:g,uniforms:c,animate:v}=r(e,p,"uniform sampler2D uTexture;varying vec2 vUv;void main(){gl_FragColor = texture2D(uTexture, vUv);}",{uFrequencyX:{value:25,range:[0,100]},uFrequencyY:{value:25,range:[0,100]},uFrequencyZ:{value:15,range:[0,100]}},{effect:3,opts:t,geoVertex:32,fov:1.0375,size:.01744});d&&(d.addSelect(u,"onMouse",{target:"Active",label:"Effect Mode",onChange:e=>c.onMouse.value=e}).addSlider(f,"value","range",{label:"VertexCount",step:1,onChange(){o(g,f.value)}}).addSlider(c.uFrequencyX,"value","range",{label:"FrequencyX",step:.01}).addSlider(c.uFrequencyY,"value","range",{label:"FrequencyY",step:.01}).addSlider(c.uFrequencyZ,"value","range",{label:"FrequencyZ",onChange(){camera.fov=1+c.uFrequencyZ.value/400,camera.updateProjectionMatrix()},step:.01}),n()),v()}break;case 4:{let _=`precision mediump float;varying vec2 vUv;varying float vWave;uniform float time,uFrequency,uAmplitude,uSpeed,uIntercept,onMouse;₹snoisevoid main(){vUv=uv;vec3 pos=position;float noiseFreq=uFrequency;float noiseAmp=uAmplitude/10.0;vec3 noisePos=vec3(pos.x*noiseFreq+time*uSpeed,pos.y,pos.z);pos.z+=snoise(noisePos)*noiseAmp;pos = onMouse == 0. ? pos : onMouse == 1. ? mix( position , pos ,uIntercept) : mix( pos , position ,uIntercept) ;vWave=pos.z;gl_Position=projectionMatrix*modelViewMatrix*vec4(pos,1.);}`,x=`uniform bool uColor;uniform sampler2D uTexture;varying vec2 vUv;varying float vWave;void main() {gl_FragColor =uColor? mix(texture2D(uTexture, vUv ),vec4(1.0),vWave):texture2D(uTexture, vUv );}`;var{debugObj:u,panel:d,geoVertex:f,plane:g,uniforms:c,animate:v}=r(e,_,x,{uColor:{value:!1},uSpeed:{value:.6,range:[.1,1],rangef:[1,10]},uAmplitude:{value:1.5,range:[0,5]},uFrequency:{value:3.5,range:[0,10]}},{effect:4,opts:t,geoVertex:16,fov:25,size:.4,aspect:e.width/e.height});t.config&&Object.keys(t.config).forEach(e=>c[e].value=t.config[e].value),d&&(d.addCheckbox(c.uColor,"value",{label:"Color Depth"}).addSelect(u,"onMouse",{target:"Active",label:"Effect Mode",onChange:e=>c.onMouse.value=e}).addSlider(f,"value","range",{label:"VertexCount",step:1,onChange:()=>o(g,f.value)}).addSlider(u,"s","range",{label:"Speed",onChange:()=>c.uSpeed.value=obj.s,step:.01}).addSlider(u,"f","rangef",{label:"FastForward",onChange:()=>c.uSpeed.value=obj.f,step:.01}).addSlider(c.uAmplitude,"value","range",{label:"Amplitude",step:.01}).addSlider(c.uFrequency,"value","range",{label:"Frequency",step:.01}),n()),v()}}})}}}